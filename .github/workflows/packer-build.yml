name: Packer Image Build

# This workflow is triggered by the webhook from the web app
on:
  repository_dispatch:
    types: [build-image]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Packer
        uses: hashicorp/setup-packer@main

      # REQUIRED for GCP Builds: Authenticate to Google Cloud.
      # This step uses your GCP_CREDENTIALS secret to create a credentials file
      # that Packer can automatically find and use.
      - name: Authenticate to Google Cloud
        if: github.event.client_payload.platform == 'gcp'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Debug: Show Webhook Payload'
        run: |
          echo "Building image for OS: ${{ github.event.client_payload.image_id }}"
          echo "Platform: ${{ github.event.client_payload.platform }}"

      - name: 'Build Packer Image'
        # This 'env' block maps your GitHub secrets to environment variables
        # that Packer and other tools can read.
        env:
          # --- GCP ---
          # Authentication is handled by the 'Authenticate to Google Cloud' step above.
          # You just need to pass the project ID as a Packer variable.
          PKR_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}

          # --- AWS ---
          # The AWS CLI and Packer will automatically use these standard environment variables for authentication.
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # You can also pass variables to your template like this:
          # PKR_VAR_aws_region: "us-east-1"
          
          # --- Azure ---
          # Pass Service Principal credentials as Packer variables.
          PKR_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          PKR_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          PKR_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          PKR_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          # Dynamically construct the template filename from the payload
          TEMPLATE_FILE="${{ github.event.client_payload.image_id }}-${{ github.event.client_payload.platform }}.pkr.hcl"

          echo "Using template file: $TEMPLATE_FILE"
          
          # Check if the file exists in the root of the repository
          if [ ! -f "$TEMPLATE_FILE" ]; then
            echo "Error: Template file $TEMPLATE_FILE not found in the repository's root directory."
            exit 1
          fi

          # Packer automatically finds variables set in the 'env' block above
          packer init $TEMPLATE_FILE
          packer build $TEMPLATE_FILE
